@page "/dashboar"
@using Radzen
@using Radzen.Blazor
@using tc.Data
@using Microsoft.EntityFrameworkCore
@inject ApplicationDbContext DbContext

<div class="container mt-4">
    <div class="row">
        @foreach (var index in Enumerable.Range(1, 17))
        {
            <div class="col-md-4 mb-4">
                <button type="button" class="btn btn-link" @onclick="() => ShowPopup(index)">
                    <img src="images/tc.jpeg" alt="Tennis Court @index" class="img-thumbnail" />
                </button>
                <div style="text-align:center">Tennis Court @index</div>
            </div>
        }
    </div>
</div>

@if (showModal)
{
    <div class="modal fade show" style="display: block;" tabindex="-1" role="dialog" aria-labelledby="courtModalLabel" aria-hidden="true">
        <div class="modal-dialog" role="document">
            <div class="modal-content" style="width: 800px">
                <div class="modal-header">
                    <h5 class="modal-title" id="courtModalLabel">Tennis Court Details</h5>
                    <button type="button" class="close" @onclick="HidePopup">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <RadzenScheduler Data="@appointments" TItem="AppointmentEntity"
                                     StartProperty="StartTime" EndProperty="EndTime"
                                     TextProperty="Status"
                                     @bind-Selected="@selectedAppointment"
                                     AppointmentRender="@OnAppointmentRender">
                        <RadzenDayView StartTime="new TimeSpan(1, 0, 0)" />
                        <RadzenWeekView StartTime="new TimeSpan(1, 0, 0)" HeaderFormat="ddd, MM/dd/yyyy" />
                        <RadzenMonthView />
                    </RadzenScheduler>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" @onclick="HidePopup">Close</button>
                </div>
            </div>
        </div>
    </div>
}

@code {
    bool showModal = false;
    int selectedCourtIndex;
    AppointmentEntity selectedAppointment;
    List<AppointmentEntity> appointments = new List<AppointmentEntity>();

    protected override async Task OnInitializedAsync()
    {
        try
        {
            appointments = await DbContext.Appointments.ToListAsync();
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error loading appointments: {ex.Message}");
            throw;
        }
    }

    void ShowPopup(int index)
    {
        selectedCourtIndex = index;
        showModal = true;
    }

    void HidePopup()
    {
        showModal = false;
    }

    void OnAppointmentRender(SchedulerAppointmentRenderEventArgs<AppointmentEntity> args)
    {
        if (args.Data.status == "deleted")
        {
            args.Attributes["style"] = "background-color: red;";
        }
    }
}
